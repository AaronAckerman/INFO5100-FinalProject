/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.finalproject.ui;

import com.finalproject.model.BusinessProduct;
import com.finalproject.model.BusinessPurchaseOrder;
import com.finalproject.model.BusinessPurchaseOrderStatusType;
import com.finalproject.model.PermissionType;
import com.finalproject.model.User;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class PurchaseOrderJPanel extends javax.swing.JPanel {
    MainJFrame jFrame;
    BusinessPurchaseOrder order;
    /**
     * Creates new form orderJPanel
     */
    public PurchaseOrderJPanel(MainJFrame jFrame) {
        initComponents();
        this.jFrame = jFrame;

        String className = "PurchaseOrder";
        if (!jFrame.getUser().hasPermission(className, PermissionType.EDIT)) {
            purchaseOrderModifyjButton.setEnabled(false);
        }
        if (!jFrame.getUser().hasPermission(className, PermissionType.CREATE)) {
            purchaseOrderCreatejButton.setEnabled(false);
        }
        if (!jFrame.getUser().hasPermission(className, PermissionType.VIEW)) {
            purchaseOrderViewjButton.setEnabled(false);
        }
        if (!jFrame.getUser().hasPermission(className, PermissionType.DELETE)) {
            purchaseOrderDeletejButton.setEnabled(false);
        }
    }

    public final void displayOrder() {
        if (order == null) {
            productjComboBox.removeAllItems();
            statusjComboBox.removeAllItems();
            qijComboBox.removeAllItems();
		    for (BusinessProduct product: BusinessProduct.find(BusinessProduct.class)) {
				productjComboBox.addItem(product);
		    }
            for (BusinessPurchaseOrderStatusType ts: BusinessPurchaseOrderStatusType.values()) {
                statusjComboBox.addItem(ts);
            }
		    for (User u: User.find(User.class)) {
				qijComboBox.addItem(u);
		    }
		    createDatePicker.clear();
		    updateDatePicker.clear();
            totalAmountjTextField.setText("");
            quantityjTextField.setText("");
        } else {
            order.refresh();
            productjComboBox.setSelectedItem(order.getProduct());
            createDatePicker.setDateTimeStrict(order.getCreateDate());
            updateDatePicker.setDateTimeStrict(order.getUpdateDate());
            statusjComboBox.setSelectedItem(order.getOrderStatusType());
            totalAmountjTextField.setText(String.valueOf(order.getTotalAmount() / 100.0));
            quantityjTextField.setText(String.valueOf(order.getQuantity()));
            productjComboBox.setSelectedItem(order.getUser());
        }
    }
    
    public final void displayOrderList() {
        DefaultTableModel model = (DefaultTableModel) orderjTable.getModel();
        model.setRowCount(0);
        
        for (BusinessPurchaseOrder current: BusinessPurchaseOrder.find(BusinessPurchaseOrder.class)) {
            Object[] row = new Object[7];
            row[0] = current.getId();
            row[1] = current.getProduct();
            row[2] = current.getCreateDate();
            row[3] = current.getUpdateDate();
            row[4] = current.getOrderStatusType();
            row[5] = current.getTotalAmount() / 100.0;
            row[6] = current.getQuantity();
            row[7] = current.getUser();
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        productjComboBox = new javax.swing.JComboBox<>();
        buttonjPanel2 = new javax.swing.JPanel();
        purchaseOrderModifyjButton = new javax.swing.JButton();
        purchaseOrderDeletejButton = new javax.swing.JButton();
        purchaseOrderCreatejButton = new javax.swing.JButton();
        purchaseOrderViewjButton = new javax.swing.JButton();
        createDatePicker = new com.github.lgooddatepicker.components.DateTimePicker();
        passwordjLabel1 = new javax.swing.JLabel();
        updateDatePicker = new com.github.lgooddatepicker.components.DateTimePicker();
        statusjComboBox = new javax.swing.JComboBox<>();
        passwordjLabel = new javax.swing.JLabel();
        userRolesjLabel = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        orderjTable = new javax.swing.JTable();
        productjLabel = new javax.swing.JLabel();
        totalAmountjLabel = new javax.swing.JLabel();
        quantityjLabel = new javax.swing.JLabel();
        totalAmountjTextField = new javax.swing.JTextField();
        quantityjTextField = new javax.swing.JTextField();
        quantityInspectorjLabel = new javax.swing.JLabel();
        qijComboBox = new javax.swing.JComboBox<>();

        purchaseOrderModifyjButton.setText("modify");
        purchaseOrderModifyjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseOrderModifyjButtonActionPerformed(evt);
            }
        });

        purchaseOrderDeletejButton.setText("delete");
        purchaseOrderDeletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseOrderDeletejButtonActionPerformed(evt);
            }
        });

        purchaseOrderCreatejButton.setText("create");
        purchaseOrderCreatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseOrderCreatejButtonActionPerformed(evt);
            }
        });

        purchaseOrderViewjButton.setText("view");
        purchaseOrderViewjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseOrderViewjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonjPanel2Layout = new javax.swing.GroupLayout(buttonjPanel2);
        buttonjPanel2.setLayout(buttonjPanel2Layout);
        buttonjPanel2Layout.setHorizontalGroup(
            buttonjPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonjPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonjPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(purchaseOrderModifyjButton, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(purchaseOrderViewjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(purchaseOrderCreatejButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(purchaseOrderDeletejButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        buttonjPanel2Layout.setVerticalGroup(
            buttonjPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonjPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(purchaseOrderModifyjButton)
                .addGap(18, 18, 18)
                .addComponent(purchaseOrderDeletejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(purchaseOrderCreatejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(purchaseOrderViewjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        createDatePicker.setEnabled(false);

        passwordjLabel1.setText("update_date");

        updateDatePicker.setEnabled(false);

        passwordjLabel.setText("create_date");

        userRolesjLabel.setText("status");

        orderjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "product", "create_date", "update_date", "status", "total amount", "quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane11.setViewportView(orderjTable);

        productjLabel.setText("product");

        totalAmountjLabel.setText("total amount");

        quantityjLabel.setText("quantity");

        quantityInspectorjLabel.setText("quantity inspector");

        qijComboBox.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quantityInspectorjLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordjLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordjLabel)
                                    .addComponent(userRolesjLabel)
                                    .addComponent(productjLabel)
                                    .addComponent(totalAmountjLabel)
                                    .addComponent(quantityjLabel))
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(createDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(productjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(quantityjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(totalAmountjTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(statusjComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 166, Short.MAX_VALUE))
                                    .addComponent(qijComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addComponent(buttonjPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(productjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(productjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userRolesjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalAmountjLabel)
                            .addComponent(totalAmountjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityjLabel)
                            .addComponent(quantityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityInspectorjLabel)
                            .addComponent(qijComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(buttonjPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70)))
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void purchaseOrderModifyjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseOrderModifyjButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = orderjTable.getSelectedRow();

        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) orderjTable.getModel();
        int id = (Integer) model.getValueAt(selectedIndex, 0);
        order = BusinessPurchaseOrder.findById(BusinessPurchaseOrder.class, id);

        try {
            order.setProduct((BusinessProduct)productjComboBox.getSelectedItem());
            order.setCreateDate(createDatePicker.getDateTimeStrict());
            order.setUpdateDate(updateDatePicker.getDateTimeStrict());
            order.setOrderStatusType((BusinessPurchaseOrderStatusType)statusjComboBox.getSelectedItem());
            order.setQuantity(Integer.parseInt(quantityjTextField.getText()));
            order.setTotalAmount((int)(Double.parseDouble(totalAmountjTextField.getText()) * 100));
            order.setUser(jFrame.getUser());

            order.flush();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Modify error: " + e.toString());
            return;
        }
        JOptionPane.showMessageDialog(this, "Modify done");
        order = null;
        displayOrder();
        displayOrderList();
    }//GEN-LAST:event_purchaseOrderModifyjButtonActionPerformed

    private void purchaseOrderDeletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseOrderDeletejButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = orderjTable.getSelectedRow();

        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) orderjTable.getModel();
        int id = (Integer) model.getValueAt(selectedIndex, 0);
        order = BusinessPurchaseOrder.findById(BusinessPurchaseOrder.class, id);
        order.delete();
        model.removeRow(selectedIndex);
        order = null;
        displayOrder();
        displayOrderList();
    }//GEN-LAST:event_purchaseOrderDeletejButtonActionPerformed

    private void purchaseOrderCreatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseOrderCreatejButtonActionPerformed
        // TODO add your handling code here:
        BusinessPurchaseOrder bo = new BusinessPurchaseOrder();
        try {
            bo.setProduct((BusinessProduct)productjComboBox.getSelectedItem());
            bo.setCreateDate(createDatePicker.getDateTimeStrict());
            bo.setUpdateDate(updateDatePicker.getDateTimeStrict());
            bo.setOrderStatusType((BusinessPurchaseOrderStatusType)statusjComboBox.getSelectedItem());
            bo.setQuantity(Integer.parseInt(quantityjTextField.getText()));
            bo.setTotalAmount((int)(Double.parseDouble(totalAmountjTextField.getText()) * 100));
            bo.setUser(jFrame.getUser());
            bo.save();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Save error: " + e.toString());
            return;
        }
        JOptionPane.showMessageDialog(this, "Save done");
        bo = null;
        displayOrder();
        order = bo;
        displayOrderList();
    }//GEN-LAST:event_purchaseOrderCreatejButtonActionPerformed

    private void purchaseOrderViewjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseOrderViewjButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = orderjTable.getSelectedRow();

        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) orderjTable.getModel();
        int id = (Integer) model.getValueAt(selectedIndex, 0);
        order = BusinessPurchaseOrder.findById(BusinessPurchaseOrder.class, id);
        displayOrder();
    }//GEN-LAST:event_purchaseOrderViewjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonjPanel2;
    private com.github.lgooddatepicker.components.DateTimePicker createDatePicker;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JTable orderjTable;
    private javax.swing.JLabel passwordjLabel;
    private javax.swing.JLabel passwordjLabel1;
    private javax.swing.JComboBox<com.finalproject.model.BusinessProduct> productjComboBox;
    private javax.swing.JLabel productjLabel;
    private javax.swing.JButton purchaseOrderCreatejButton;
    private javax.swing.JButton purchaseOrderDeletejButton;
    private javax.swing.JButton purchaseOrderModifyjButton;
    private javax.swing.JButton purchaseOrderViewjButton;
    private javax.swing.JComboBox<User> qijComboBox;
    private javax.swing.JLabel quantityInspectorjLabel;
    private javax.swing.JLabel quantityjLabel;
    private javax.swing.JTextField quantityjTextField;
    private javax.swing.JComboBox<BusinessPurchaseOrderStatusType> statusjComboBox;
    private javax.swing.JLabel totalAmountjLabel;
    private javax.swing.JTextField totalAmountjTextField;
    private com.github.lgooddatepicker.components.DateTimePicker updateDatePicker;
    private javax.swing.JLabel userRolesjLabel;
    // End of variables declaration//GEN-END:variables
}
