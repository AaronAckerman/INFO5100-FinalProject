/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.finalproject.ui;

import com.finalproject.model.BusinessDeliverOrder;
import com.finalproject.model.BusinessDeliverOrderStatusType;
import com.finalproject.model.BusinessProduct;
import com.finalproject.model.BusinessVehicle;
import com.finalproject.model.Enterprise;
import com.finalproject.model.PermissionType;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class DeliverOrderJPanel extends javax.swing.JPanel {
    MainJFrame jFrame;
    BusinessDeliverOrder order;
    /**
     * Creates new form orderJPanel
     */
    public DeliverOrderJPanel(MainJFrame jFrame) {
        initComponents();
        this.jFrame = jFrame;

        String className = "DeliverOrder";
        if (!jFrame.getUser().hasPermission(className, PermissionType.EDIT)) {
            deliverOrderModifyjButton.setEnabled(false);
        }
        if (!jFrame.getUser().hasPermission(className, PermissionType.CREATE)) {
            deliverOrderCreatejButton.setEnabled(false);
        }
        if (!jFrame.getUser().hasPermission(className, PermissionType.VIEW)) {
            deliverOrderViewjButton.setEnabled(false);
        }
        if (!jFrame.getUser().hasPermission(className, PermissionType.DELETE)) {
            deliverOrderDeletejButton.setEnabled(false);
        }
    }

    public final void displayOrder() {
        if (order == null) {
            productjComboBox.removeAllItems();
            vehiclejComboBox.removeAllItems();
            enterprisejComboBox.removeAllItems();
            statusjComboBox.removeAllItems();
		    for (BusinessProduct product: BusinessProduct.find(BusinessProduct.class)) {
				productjComboBox.addItem(product);
		    }
		    for (BusinessVehicle o: BusinessVehicle.findAvailableVehicle()) {
				vehiclejComboBox.addItem(o);
		    }
		    for (Enterprise o: Enterprise.find(Enterprise.class)) {
				enterprisejComboBox.addItem(o);
		    }
            for (BusinessDeliverOrderStatusType ts: BusinessDeliverOrderStatusType.values()) {
                statusjComboBox.addItem(ts);
            }
		    createDatePicker.clear();
		    updateDatePicker.clear();
            feejTextField.setText("");
            fromLocationjTextField.setText("");
            toLocationjTextField.setText("");
        } else {
            order.refresh();
            productjComboBox.setSelectedItem(order.getBusinessProduct());
            vehiclejComboBox.setSelectedItem(order.getBusinessVehicle());
            enterprisejComboBox.setSelectedItem(order.getFromEnterprise());
            createDatePicker.setDateTimeStrict(order.getCreateDate());
            updateDatePicker.setDateTimeStrict(order.getUpdateDate());
            statusjComboBox.setSelectedItem(order.getOrderStatusType());
            feejTextField.setText(String.valueOf(order.getFee() / 100.0));
            fromLocationjTextField.setText(order.getFromLocation());
            toLocationjTextField.setText(order.getToLocation());
        }
    }
    
    public final void displayOrderList() {
        DefaultTableModel model = (DefaultTableModel) orderjTable.getModel();
        model.setRowCount(0);
        
        for (BusinessDeliverOrder current: BusinessDeliverOrder.find(BusinessDeliverOrder.class)) {
            Object[] row = new Object[7];
            row[0] = current.getId();
            row[1] = current.getBusinessVehicle();
            row[2] = current.getFromEnterprise();
            row[3] = current.getCreateDate();
            row[4] = current.getUpdateDate();
            row[5] = current.getOrderStatusType();
            row[6] = current.getFee() / 100.0;
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        productjComboBox = new javax.swing.JComboBox<>();
        buttonjPanel2 = new javax.swing.JPanel();
        deliverOrderModifyjButton = new javax.swing.JButton();
        deliverOrderDeletejButton = new javax.swing.JButton();
        deliverOrderCreatejButton = new javax.swing.JButton();
        deliverOrderViewjButton = new javax.swing.JButton();
        createDatePicker = new com.github.lgooddatepicker.components.DateTimePicker();
        passwordjLabel1 = new javax.swing.JLabel();
        updateDatePicker = new com.github.lgooddatepicker.components.DateTimePicker();
        statusjComboBox = new javax.swing.JComboBox<>();
        passwordjLabel = new javax.swing.JLabel();
        userRolesjLabel = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        orderjTable = new javax.swing.JTable();
        productjLabel = new javax.swing.JLabel();
        feejLabel = new javax.swing.JLabel();
        fromLocationjLabel = new javax.swing.JLabel();
        feejTextField = new javax.swing.JTextField();
        fromLocationjTextField = new javax.swing.JTextField();
        toLocationjLabel = new javax.swing.JLabel();
        toLocationjTextField = new javax.swing.JTextField();
        vehiclejLabel = new javax.swing.JLabel();
        vehiclejComboBox = new javax.swing.JComboBox<>();
        enterprisejLabel = new javax.swing.JLabel();
        enterprisejComboBox = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(242, 237, 231));

        buttonjPanel2.setBackground(new java.awt.Color(242, 237, 231));

        deliverOrderModifyjButton.setText("Modify");
        deliverOrderModifyjButton.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N
        deliverOrderModifyjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliverOrderModifyjButtonActionPerformed(evt);
            }
        });

        deliverOrderDeletejButton.setText("Delete");
        deliverOrderDeletejButton.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N
        deliverOrderDeletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliverOrderDeletejButtonActionPerformed(evt);
            }
        });

        deliverOrderCreatejButton.setText("Create");
        deliverOrderCreatejButton.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N
        deliverOrderCreatejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliverOrderCreatejButtonActionPerformed(evt);
            }
        });

        deliverOrderViewjButton.setText("View");
        deliverOrderViewjButton.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N
        deliverOrderViewjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliverOrderViewjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonjPanel2Layout = new javax.swing.GroupLayout(buttonjPanel2);
        buttonjPanel2.setLayout(buttonjPanel2Layout);
        buttonjPanel2Layout.setHorizontalGroup(
            buttonjPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonjPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deliverOrderModifyjButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deliverOrderDeletejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deliverOrderCreatejButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deliverOrderViewjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(176, Short.MAX_VALUE))
        );
        buttonjPanel2Layout.setVerticalGroup(
            buttonjPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonjPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonjPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deliverOrderModifyjButton)
                    .addComponent(deliverOrderDeletejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliverOrderCreatejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliverOrderViewjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        createDatePicker.setBackground(new java.awt.Color(242, 237, 231));
        createDatePicker.setEnabled(false);

        passwordjLabel1.setText("Update-date");
        passwordjLabel1.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        updateDatePicker.setBackground(new java.awt.Color(242, 237, 231));
        updateDatePicker.setEnabled(false);

        passwordjLabel.setText("Create_date");
        passwordjLabel.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        userRolesjLabel.setText("Status");
        userRolesjLabel.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        orderjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Vehicle", "From Enterprise", "Create_date", "Update_date", "Status", "Fee"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane11.setViewportView(orderjTable);

        productjLabel.setText("Product");
        productjLabel.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        feejLabel.setText("Deliver Fee");
        feejLabel.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        fromLocationjLabel.setText("From Location");
        fromLocationjLabel.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        toLocationjLabel.setText("To Location");
        toLocationjLabel.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        vehiclejLabel.setText("Vehicle");
        vehiclejLabel.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        enterprisejLabel.setText("From Enterprise");
        enterprisejLabel.setFont(new java.awt.Font("Chalkboard SE", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordjLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordjLabel)
                                    .addComponent(userRolesjLabel)
                                    .addComponent(productjLabel))
                                .addGap(107, 107, 107)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(updateDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(createDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(productjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(feejLabel)
                                    .addComponent(fromLocationjLabel)
                                    .addComponent(toLocationjLabel))
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(feejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                    .addComponent(fromLocationjTextField)
                                    .addComponent(toLocationjTextField)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(enterprisejLabel)
                                    .addComponent(vehiclejLabel))
                                .addGap(88, 88, 88)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(vehiclejComboBox, 0, 200, Short.MAX_VALUE)
                                    .addComponent(enterprisejComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(buttonjPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 579, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(528, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(productjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehiclejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vehiclejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterprisejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enterprisejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordjLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userRolesjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(statusjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(feejLabel)
                    .addComponent(feejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromLocationjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromLocationjLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toLocationjLabel)
                    .addComponent(toLocationjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(buttonjPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deliverOrderModifyjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliverOrderModifyjButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = orderjTable.getSelectedRow();

        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) orderjTable.getModel();
        int id = (Integer) model.getValueAt(selectedIndex, 0);
        order = BusinessDeliverOrder.findById(BusinessDeliverOrder.class, id);

        try {
            order.setBusinessProduct((BusinessProduct)productjComboBox.getSelectedItem());
            order.setBusinessVehicle((BusinessVehicle)vehiclejComboBox.getSelectedItem());
            order.setFromEnterprise((Enterprise)enterprisejComboBox.getSelectedItem());
            order.setCreateDate(createDatePicker.getDateTimeStrict());
            order.setUpdateDate(updateDatePicker.getDateTimeStrict());
            order.setOrderStatusType((BusinessDeliverOrderStatusType)statusjComboBox.getSelectedItem());
            order.setFee((int)(Double.parseDouble(feejTextField.getText()) * 100));
            order.setFromLocation(fromLocationjTextField.getText());
            order.setToLocation(toLocationjTextField.getText());

            order.flush();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Modify error: " + e.getMessage());
            return;
        }
        JOptionPane.showMessageDialog(this, "Modify done");
        order = null;
        displayOrder();
        displayOrderList();
    }//GEN-LAST:event_deliverOrderModifyjButtonActionPerformed

    private void deliverOrderDeletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliverOrderDeletejButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = orderjTable.getSelectedRow();

        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) orderjTable.getModel();
        int id = (Integer) model.getValueAt(selectedIndex, 0);
        order = BusinessDeliverOrder.findById(BusinessDeliverOrder.class, id);
        order.delete();
        model.removeRow(selectedIndex);
        order = null;
        displayOrder();
        displayOrderList();
    }//GEN-LAST:event_deliverOrderDeletejButtonActionPerformed

    private void deliverOrderCreatejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliverOrderCreatejButtonActionPerformed
        // TODO add your handling code here:
        BusinessDeliverOrder bo = new BusinessDeliverOrder();
        try {
            bo.setBusinessProduct((BusinessProduct)productjComboBox.getSelectedItem());
            bo.setBusinessVehicle((BusinessVehicle)vehiclejComboBox.getSelectedItem());
            bo.setFromEnterprise((Enterprise)enterprisejComboBox.getSelectedItem());
            bo.setCreateDate(createDatePicker.getDateTimeStrict());
            bo.setUpdateDate(updateDatePicker.getDateTimeStrict());
            bo.setOrderStatusType((BusinessDeliverOrderStatusType)statusjComboBox.getSelectedItem());
            bo.setFee((int)(Double.parseDouble(feejTextField.getText()) * 100));
            bo.setFromLocation(fromLocationjTextField.getText());
            bo.setToLocation(toLocationjTextField.getText());
            bo.save();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Save error: " + e.getMessage());
            return;
        }
        JOptionPane.showMessageDialog(this, "Save done");
        bo = null;
        displayOrder();
        order = bo;
        displayOrderList();
    }//GEN-LAST:event_deliverOrderCreatejButtonActionPerformed

    private void deliverOrderViewjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliverOrderViewjButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = orderjTable.getSelectedRow();

        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) orderjTable.getModel();
        int id = (Integer) model.getValueAt(selectedIndex, 0);
        order = BusinessDeliverOrder.findById(BusinessDeliverOrder.class, id);
        displayOrder();
    }//GEN-LAST:event_deliverOrderViewjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonjPanel2;
    private com.github.lgooddatepicker.components.DateTimePicker createDatePicker;
    private javax.swing.JButton deliverOrderCreatejButton;
    private javax.swing.JButton deliverOrderDeletejButton;
    private javax.swing.JButton deliverOrderModifyjButton;
    private javax.swing.JButton deliverOrderViewjButton;
    private javax.swing.JComboBox<Enterprise> enterprisejComboBox;
    private javax.swing.JLabel enterprisejLabel;
    private javax.swing.JLabel feejLabel;
    private javax.swing.JTextField feejTextField;
    private javax.swing.JLabel fromLocationjLabel;
    private javax.swing.JTextField fromLocationjTextField;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JTable orderjTable;
    private javax.swing.JLabel passwordjLabel;
    private javax.swing.JLabel passwordjLabel1;
    private javax.swing.JComboBox<com.finalproject.model.BusinessProduct> productjComboBox;
    private javax.swing.JLabel productjLabel;
    private javax.swing.JComboBox<BusinessDeliverOrderStatusType> statusjComboBox;
    private javax.swing.JLabel toLocationjLabel;
    private javax.swing.JTextField toLocationjTextField;
    private com.github.lgooddatepicker.components.DateTimePicker updateDatePicker;
    private javax.swing.JLabel userRolesjLabel;
    private javax.swing.JComboBox<BusinessVehicle> vehiclejComboBox;
    private javax.swing.JLabel vehiclejLabel;
    // End of variables declaration//GEN-END:variables
}
